/**
 * Autogenerated by Thrift Compiler (0.16.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.16.0)", date = "2023-04-16")
public class Summary implements org.apache.thrift.TBase<Summary, Summary._Fields>, java.io.Serializable, Cloneable, Comparable<Summary> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("Summary");

  private static final org.apache.thrift.protocol.TField SAVE_URL_FIELD_DESC = new org.apache.thrift.protocol.TField("saveUrl", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField SAVE_VERSION_FIELD_DESC = new org.apache.thrift.protocol.TField("saveVersion", org.apache.thrift.protocol.TType.BYTE, (short)2);
  private static final org.apache.thrift.protocol.TField CHALLENGE_FIELD_DESC = new org.apache.thrift.protocol.TField("challenge", org.apache.thrift.protocol.TType.I16, (short)3);
  private static final org.apache.thrift.protocol.TField RKS_FIELD_DESC = new org.apache.thrift.protocol.TField("rks", org.apache.thrift.protocol.TType.DOUBLE, (short)4);
  private static final org.apache.thrift.protocol.TField GAME_VERSION_FIELD_DESC = new org.apache.thrift.protocol.TField("gameVersion", org.apache.thrift.protocol.TType.BYTE, (short)5);
  private static final org.apache.thrift.protocol.TField AVATAR_FIELD_DESC = new org.apache.thrift.protocol.TField("avatar", org.apache.thrift.protocol.TType.STRING, (short)6);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new SummaryStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new SummaryTupleSchemeFactory();

  public @org.apache.thrift.annotation.Nullable java.lang.String saveUrl; // required
  public byte saveVersion; // required
  public short challenge; // required
  public double rks; // required
  public byte gameVersion; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String avatar; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    SAVE_URL((short)1, "saveUrl"),
    SAVE_VERSION((short)2, "saveVersion"),
    CHALLENGE((short)3, "challenge"),
    RKS((short)4, "rks"),
    GAME_VERSION((short)5, "gameVersion"),
    AVATAR((short)6, "avatar");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // SAVE_URL
          return SAVE_URL;
        case 2: // SAVE_VERSION
          return SAVE_VERSION;
        case 3: // CHALLENGE
          return CHALLENGE;
        case 4: // RKS
          return RKS;
        case 5: // GAME_VERSION
          return GAME_VERSION;
        case 6: // AVATAR
          return AVATAR;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __SAVEVERSION_ISSET_ID = 0;
  private static final int __CHALLENGE_ISSET_ID = 1;
  private static final int __RKS_ISSET_ID = 2;
  private static final int __GAMEVERSION_ISSET_ID = 3;
  private byte __isset_bitfield = 0;
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.SAVE_URL, new org.apache.thrift.meta_data.FieldMetaData("saveUrl", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SAVE_VERSION, new org.apache.thrift.meta_data.FieldMetaData("saveVersion", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BYTE)));
    tmpMap.put(_Fields.CHALLENGE, new org.apache.thrift.meta_data.FieldMetaData("challenge", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I16)));
    tmpMap.put(_Fields.RKS, new org.apache.thrift.meta_data.FieldMetaData("rks", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.GAME_VERSION, new org.apache.thrift.meta_data.FieldMetaData("gameVersion", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BYTE)));
    tmpMap.put(_Fields.AVATAR, new org.apache.thrift.meta_data.FieldMetaData("avatar", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(Summary.class, metaDataMap);
  }

  public Summary() {
  }

  public Summary(
    java.lang.String saveUrl,
    byte saveVersion,
    short challenge,
    double rks,
    byte gameVersion,
    java.lang.String avatar)
  {
    this();
    this.saveUrl = saveUrl;
    this.saveVersion = saveVersion;
    setSaveVersionIsSet(true);
    this.challenge = challenge;
    setChallengeIsSet(true);
    this.rks = rks;
    setRksIsSet(true);
    this.gameVersion = gameVersion;
    setGameVersionIsSet(true);
    this.avatar = avatar;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public Summary(Summary other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetSaveUrl()) {
      this.saveUrl = other.saveUrl;
    }
    this.saveVersion = other.saveVersion;
    this.challenge = other.challenge;
    this.rks = other.rks;
    this.gameVersion = other.gameVersion;
    if (other.isSetAvatar()) {
      this.avatar = other.avatar;
    }
  }

  public Summary deepCopy() {
    return new Summary(this);
  }

  @Override
  public void clear() {
    this.saveUrl = null;
    setSaveVersionIsSet(false);
    this.saveVersion = 0;
    setChallengeIsSet(false);
    this.challenge = 0;
    setRksIsSet(false);
    this.rks = 0.0;
    setGameVersionIsSet(false);
    this.gameVersion = 0;
    this.avatar = null;
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getSaveUrl() {
    return this.saveUrl;
  }

  public Summary setSaveUrl(@org.apache.thrift.annotation.Nullable java.lang.String saveUrl) {
    this.saveUrl = saveUrl;
    return this;
  }

  public void unsetSaveUrl() {
    this.saveUrl = null;
  }

  /** Returns true if field saveUrl is set (has been assigned a value) and false otherwise */
  public boolean isSetSaveUrl() {
    return this.saveUrl != null;
  }

  public void setSaveUrlIsSet(boolean value) {
    if (!value) {
      this.saveUrl = null;
    }
  }

  public byte getSaveVersion() {
    return this.saveVersion;
  }

  public Summary setSaveVersion(byte saveVersion) {
    this.saveVersion = saveVersion;
    setSaveVersionIsSet(true);
    return this;
  }

  public void unsetSaveVersion() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __SAVEVERSION_ISSET_ID);
  }

  /** Returns true if field saveVersion is set (has been assigned a value) and false otherwise */
  public boolean isSetSaveVersion() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __SAVEVERSION_ISSET_ID);
  }

  public void setSaveVersionIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __SAVEVERSION_ISSET_ID, value);
  }

  public short getChallenge() {
    return this.challenge;
  }

  public Summary setChallenge(short challenge) {
    this.challenge = challenge;
    setChallengeIsSet(true);
    return this;
  }

  public void unsetChallenge() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __CHALLENGE_ISSET_ID);
  }

  /** Returns true if field challenge is set (has been assigned a value) and false otherwise */
  public boolean isSetChallenge() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __CHALLENGE_ISSET_ID);
  }

  public void setChallengeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __CHALLENGE_ISSET_ID, value);
  }

  public double getRks() {
    return this.rks;
  }

  public Summary setRks(double rks) {
    this.rks = rks;
    setRksIsSet(true);
    return this;
  }

  public void unsetRks() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __RKS_ISSET_ID);
  }

  /** Returns true if field rks is set (has been assigned a value) and false otherwise */
  public boolean isSetRks() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __RKS_ISSET_ID);
  }

  public void setRksIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __RKS_ISSET_ID, value);
  }

  public byte getGameVersion() {
    return this.gameVersion;
  }

  public Summary setGameVersion(byte gameVersion) {
    this.gameVersion = gameVersion;
    setGameVersionIsSet(true);
    return this;
  }

  public void unsetGameVersion() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __GAMEVERSION_ISSET_ID);
  }

  /** Returns true if field gameVersion is set (has been assigned a value) and false otherwise */
  public boolean isSetGameVersion() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __GAMEVERSION_ISSET_ID);
  }

  public void setGameVersionIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __GAMEVERSION_ISSET_ID, value);
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getAvatar() {
    return this.avatar;
  }

  public Summary setAvatar(@org.apache.thrift.annotation.Nullable java.lang.String avatar) {
    this.avatar = avatar;
    return this;
  }

  public void unsetAvatar() {
    this.avatar = null;
  }

  /** Returns true if field avatar is set (has been assigned a value) and false otherwise */
  public boolean isSetAvatar() {
    return this.avatar != null;
  }

  public void setAvatarIsSet(boolean value) {
    if (!value) {
      this.avatar = null;
    }
  }

  public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
    switch (field) {
    case SAVE_URL:
      if (value == null) {
        unsetSaveUrl();
      } else {
        setSaveUrl((java.lang.String)value);
      }
      break;

    case SAVE_VERSION:
      if (value == null) {
        unsetSaveVersion();
      } else {
        setSaveVersion((java.lang.Byte)value);
      }
      break;

    case CHALLENGE:
      if (value == null) {
        unsetChallenge();
      } else {
        setChallenge((java.lang.Short)value);
      }
      break;

    case RKS:
      if (value == null) {
        unsetRks();
      } else {
        setRks((java.lang.Double)value);
      }
      break;

    case GAME_VERSION:
      if (value == null) {
        unsetGameVersion();
      } else {
        setGameVersion((java.lang.Byte)value);
      }
      break;

    case AVATAR:
      if (value == null) {
        unsetAvatar();
      } else {
        setAvatar((java.lang.String)value);
      }
      break;

    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case SAVE_URL:
      return getSaveUrl();

    case SAVE_VERSION:
      return getSaveVersion();

    case CHALLENGE:
      return getChallenge();

    case RKS:
      return getRks();

    case GAME_VERSION:
      return getGameVersion();

    case AVATAR:
      return getAvatar();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case SAVE_URL:
      return isSetSaveUrl();
    case SAVE_VERSION:
      return isSetSaveVersion();
    case CHALLENGE:
      return isSetChallenge();
    case RKS:
      return isSetRks();
    case GAME_VERSION:
      return isSetGameVersion();
    case AVATAR:
      return isSetAvatar();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that instanceof Summary)
      return this.equals((Summary)that);
    return false;
  }

  public boolean equals(Summary that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_saveUrl = true && this.isSetSaveUrl();
    boolean that_present_saveUrl = true && that.isSetSaveUrl();
    if (this_present_saveUrl || that_present_saveUrl) {
      if (!(this_present_saveUrl && that_present_saveUrl))
        return false;
      if (!this.saveUrl.equals(that.saveUrl))
        return false;
    }

    boolean this_present_saveVersion = true;
    boolean that_present_saveVersion = true;
    if (this_present_saveVersion || that_present_saveVersion) {
      if (!(this_present_saveVersion && that_present_saveVersion))
        return false;
      if (this.saveVersion != that.saveVersion)
        return false;
    }

    boolean this_present_challenge = true;
    boolean that_present_challenge = true;
    if (this_present_challenge || that_present_challenge) {
      if (!(this_present_challenge && that_present_challenge))
        return false;
      if (this.challenge != that.challenge)
        return false;
    }

    boolean this_present_rks = true;
    boolean that_present_rks = true;
    if (this_present_rks || that_present_rks) {
      if (!(this_present_rks && that_present_rks))
        return false;
      if (this.rks != that.rks)
        return false;
    }

    boolean this_present_gameVersion = true;
    boolean that_present_gameVersion = true;
    if (this_present_gameVersion || that_present_gameVersion) {
      if (!(this_present_gameVersion && that_present_gameVersion))
        return false;
      if (this.gameVersion != that.gameVersion)
        return false;
    }

    boolean this_present_avatar = true && this.isSetAvatar();
    boolean that_present_avatar = true && that.isSetAvatar();
    if (this_present_avatar || that_present_avatar) {
      if (!(this_present_avatar && that_present_avatar))
        return false;
      if (!this.avatar.equals(that.avatar))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetSaveUrl()) ? 131071 : 524287);
    if (isSetSaveUrl())
      hashCode = hashCode * 8191 + saveUrl.hashCode();

    hashCode = hashCode * 8191 + (int) (saveVersion);

    hashCode = hashCode * 8191 + challenge;

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(rks);

    hashCode = hashCode * 8191 + (int) (gameVersion);

    hashCode = hashCode * 8191 + ((isSetAvatar()) ? 131071 : 524287);
    if (isSetAvatar())
      hashCode = hashCode * 8191 + avatar.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(Summary other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.compare(isSetSaveUrl(), other.isSetSaveUrl());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSaveUrl()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.saveUrl, other.saveUrl);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetSaveVersion(), other.isSetSaveVersion());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSaveVersion()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.saveVersion, other.saveVersion);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetChallenge(), other.isSetChallenge());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetChallenge()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.challenge, other.challenge);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetRks(), other.isSetRks());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRks()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.rks, other.rks);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetGameVersion(), other.isSetGameVersion());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetGameVersion()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.gameVersion, other.gameVersion);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetAvatar(), other.isSetAvatar());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAvatar()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.avatar, other.avatar);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  @org.apache.thrift.annotation.Nullable
  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("Summary(");
    boolean first = true;

    sb.append("saveUrl:");
    if (this.saveUrl == null) {
      sb.append("null");
    } else {
      sb.append(this.saveUrl);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("saveVersion:");
    sb.append(this.saveVersion);
    first = false;
    if (!first) sb.append(", ");
    sb.append("challenge:");
    sb.append(this.challenge);
    first = false;
    if (!first) sb.append(", ");
    sb.append("rks:");
    sb.append(this.rks);
    first = false;
    if (!first) sb.append(", ");
    sb.append("gameVersion:");
    sb.append(this.gameVersion);
    first = false;
    if (!first) sb.append(", ");
    sb.append("avatar:");
    if (this.avatar == null) {
      sb.append("null");
    } else {
      sb.append(this.avatar);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    if (saveUrl == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'saveUrl' was not present! Struct: " + toString());
    }
    // alas, we cannot check 'saveVersion' because it's a primitive and you chose the non-beans generator.
    // alas, we cannot check 'challenge' because it's a primitive and you chose the non-beans generator.
    // alas, we cannot check 'rks' because it's a primitive and you chose the non-beans generator.
    // alas, we cannot check 'gameVersion' because it's a primitive and you chose the non-beans generator.
    if (avatar == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'avatar' was not present! Struct: " + toString());
    }
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class SummaryStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public SummaryStandardScheme getScheme() {
      return new SummaryStandardScheme();
    }
  }

  private static class SummaryStandardScheme extends org.apache.thrift.scheme.StandardScheme<Summary> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, Summary struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // SAVE_URL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.saveUrl = iprot.readString();
              struct.setSaveUrlIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // SAVE_VERSION
            if (schemeField.type == org.apache.thrift.protocol.TType.BYTE) {
              struct.saveVersion = iprot.readByte();
              struct.setSaveVersionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // CHALLENGE
            if (schemeField.type == org.apache.thrift.protocol.TType.I16) {
              struct.challenge = iprot.readI16();
              struct.setChallengeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // RKS
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.rks = iprot.readDouble();
              struct.setRksIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // GAME_VERSION
            if (schemeField.type == org.apache.thrift.protocol.TType.BYTE) {
              struct.gameVersion = iprot.readByte();
              struct.setGameVersionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // AVATAR
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.avatar = iprot.readString();
              struct.setAvatarIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      if (!struct.isSetSaveVersion()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'saveVersion' was not found in serialized data! Struct: " + toString());
      }
      if (!struct.isSetChallenge()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'challenge' was not found in serialized data! Struct: " + toString());
      }
      if (!struct.isSetRks()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'rks' was not found in serialized data! Struct: " + toString());
      }
      if (!struct.isSetGameVersion()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'gameVersion' was not found in serialized data! Struct: " + toString());
      }
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, Summary struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.saveUrl != null) {
        oprot.writeFieldBegin(SAVE_URL_FIELD_DESC);
        oprot.writeString(struct.saveUrl);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(SAVE_VERSION_FIELD_DESC);
      oprot.writeByte(struct.saveVersion);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(CHALLENGE_FIELD_DESC);
      oprot.writeI16(struct.challenge);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(RKS_FIELD_DESC);
      oprot.writeDouble(struct.rks);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(GAME_VERSION_FIELD_DESC);
      oprot.writeByte(struct.gameVersion);
      oprot.writeFieldEnd();
      if (struct.avatar != null) {
        oprot.writeFieldBegin(AVATAR_FIELD_DESC);
        oprot.writeString(struct.avatar);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class SummaryTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public SummaryTupleScheme getScheme() {
      return new SummaryTupleScheme();
    }
  }

  private static class SummaryTupleScheme extends org.apache.thrift.scheme.TupleScheme<Summary> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, Summary struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      oprot.writeString(struct.saveUrl);
      oprot.writeByte(struct.saveVersion);
      oprot.writeI16(struct.challenge);
      oprot.writeDouble(struct.rks);
      oprot.writeByte(struct.gameVersion);
      oprot.writeString(struct.avatar);
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, Summary struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      struct.saveUrl = iprot.readString();
      struct.setSaveUrlIsSet(true);
      struct.saveVersion = iprot.readByte();
      struct.setSaveVersionIsSet(true);
      struct.challenge = iprot.readI16();
      struct.setChallengeIsSet(true);
      struct.rks = iprot.readDouble();
      struct.setRksIsSet(true);
      struct.gameVersion = iprot.readByte();
      struct.setGameVersionIsSet(true);
      struct.avatar = iprot.readString();
      struct.setAvatarIsSet(true);
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

